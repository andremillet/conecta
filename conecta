#!/bin/bash

# Verifica se o usu√°rio forneceu o caminho completo
if [ -z "$1" ]; then
  echo "Uso: conecta <conta/repo/branch/caminho/para/script_sem_extensao>"
  echo "Exemplo: conecta andremillet/prognosys/conduta-extractor/tui"
  exit 1
fi

# Pega o caminho completo fornecido pelo usu√°rio
SCRIPT_PATH=$1
FULL_SCRIPT_PATH="${SCRIPT_PATH}.py"
RAW_URL="https://raw.githubusercontent.com/${FULL_SCRIPT_PATH}"

echo "‚û°Ô∏è  Caminho fornecido: ${SCRIPT_PATH}"
echo "üîé Buscando script em: ${RAW_URL}"

# Cria um arquivo tempor√°rio seguro para armazenar o script
# O comando 'mktemp' cria um arquivo √∫nico e seguro para evitar conflitos
TMP_FILE=$(mktemp)

# GARANTIA DE LIMPEZA: O 'trap' garante que o arquivo tempor√°rio ser√°
# removido ao final da execu√ß√£o, mesmo se o script for interrompido (Ctrl+C).
trap 'rm -f "$TMP_FILE"' EXIT

echo "üì• Baixando para arquivo tempor√°rio..."
# Usa o curl para salvar a sa√≠da (-o) no nosso arquivo tempor√°rio
curl -sSL "$RAW_URL" -o "$TMP_FILE"

# Verifica se o download falhou (ex: 404 Not Found)
if [ $? -ne 0 ]; then
    echo "‚ùå Erro: N√£o foi poss√≠vel baixar o script. Verifique a URL."
    exit 1
fi

echo "üöÄ Executando o programa interativo..."
echo "--------------------------------------------------"

# Executa o arquivo baixado. Agora, o stdin do python est√° conectado ao seu teclado!
python3 "$TMP_FILE"

echo "--------------------------------------------------"
echo "‚úÖ Programa finalizado."

# A limpeza do arquivo tempor√°rio √© feita automaticamente pelo 'trap' no final.
